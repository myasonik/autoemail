//- include helpers
include elements

//- mixin placeBkgd(bkgd)
//- 	// [if gte mso 9]
//- 	| <v:rect xmlns:v="urn:schemas-microsoft-com:vml" fill="true" stroke="false" style="width:#{bkgd.width}px;height:#{bkgd.height}px;">
//- 	| <v:fill type="tile" src= #{bkgd.src} color= #{bkgd.bgcolor} />
//- 	| <v:textbox inset="0,0,0,0">
//- 	// [endif]
//- 	if bkgd.link
//- 		+a(bkgd.link)
//- 			p= bkgd.alt
//- 	else 
//- 		p= bkgd.alt
//- 	// [if gte mso 9]
//- 	| </v:textbox>
//- 	| </v:rect>
//- 	// [endif]

//- mixin placeText(text)
//- 	p= text.text

//- //- mixin place(el)
//- //- 	case el.type
//- //- 		when 'img'
//- //- 			+placeImg(el)
//- //- 		when 'background'
//- //- 			+placeBkgd(el)
//- //- 		when 'text'
//- //- 			+placeText(el)

//- mixin placeRow(row)
//- 	- for (var i = 0; i < row.length; i++)
//- 		- if (i === 0 || row[i-1].height === row[i].height)
//- 			+td(row[i])
//- 				+place(row[i])
//- 		- else
//- 			+td(row[i])(valign="bottom")
//- 				+place(row[i])

//- mixin newRow
//- 	+tr
//- 		td
//- 			+rowPartial
//- 				if block
//- 					block

//- mixin rowPartial
//- 	+table
//- 		+tr
//- 			if block
//- 				block

//- //- mixin build
//- 	- for (var i = 0; i < rows.length; i++)
//- 		- var row = rows[i];
//- 		+tr
//- 			td
//- 				+rowPartial
//- 					+placeRow(row)
//- 					- if (rowWidths[i] !== maxWidth && rowWidths[i+1] !== undefined && rowWidths[i+1] !== maxWidth)
//- 						td(valign="bottom")
//- 							+rowPartial
//- 								+placeRow(rows[++i])

mixin placeImg(cell)
	if cell.link
		+a(cell.link)
			+img(cell)
	else
		+img(cell)


mixin place(cell)
	case cell.type
		when 'img'
			+placeImg(cell)

mixin row
	+tr
		td
			+table
				+tr
					if block
						block

mixin build
	each row in rows
		+row
			each cell in row
				td
					+place(cell)